---
import { getCollection } from "astro:content";
import CuisineLayout from "../../layouts/CuisineLayout.astro";
import RecipeCard from "../../components/RecipeCard.astro";
import CategoryCard from "../../components/CategoryCard.astro";
import CookbookCard from "../../components/CookbookCard.astro";
import CuisineNav from "../../components/CuisineNav.astro";

// Get all recipes for cookbook counts
const allRecipes = await getCollection("cuisine");

// For static site, we need to include all recipes and filter client-side
// Exclude "Petite École" and "Camps Scout" recipes from main listing
const recipes = allRecipes
  .filter((recipe) => recipe.data.cookbook !== "Petite École" && recipe.data.cookbook !== "Camps Scout" && !recipe.data.draft)
  .sort(
    (a, b) =>
      new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf()
  );

// Split recipes into featured and recent
const featuredRecipe = recipes[0];
const recentRecipes = recipes.slice(1, 5);

// All categories for the cards
const allCategories = [
  'entrée',
  'plat principal',
  'accompagnement',
  'salade',
  'dessert',
  'collation',
  'boisson'
];

// Calculate category counts
const categoryCounts: Record<string, number> = {};
allCategories.forEach((category) => {
  categoryCounts[category] = recipes.filter((recipe) =>
    recipe.data.categories.includes(category)
  ).length;
});

// Calculate cookbook recipe counts
const petiteEcoleCount = allRecipes.filter(
  (recipe) => recipe.data.cookbook === "Petite École" && !recipe.data.draft
).length;

const campsScoutCount = allRecipes.filter(
  (recipe) => recipe.data.cookbook === "Camps Scout" && !recipe.data.draft
).length;
---

<CuisineLayout
  title="Renardo Cuisine | Recettes futées"
  description="Découvrez les recettes secrètes du renard cuisinier"
>
  <CuisineNav variant="index" />

  <main>
    <div class="header-section">
      <h1 class="page-title">
        <span class="accent">Renardo</span> Cuisine
      </h1>
      <p class="subtitle">Recettes futées mijotées avec passion</p>
    </div>

    {featuredRecipe && (
      <section class="featured-section">
        <h2 class="section-title">À la Une</h2>
        <RecipeCard recipe={featuredRecipe} variant="featured" index={0} />
      </section>
    )}

    {recentRecipes.length > 0 && (
      <section class="recent-section">
        <h2 class="section-title">Recettes Récentes</h2>
        <div class="recent-grid">
          {recentRecipes.map((recipe, index) => (
            <RecipeCard recipe={recipe} variant="standard" index={index + 1} />
          ))}
        </div>
      </section>
    )}

    <section class="cookbooks-section">
      <h2 class="section-title">Livres de Recettes</h2>
      <div class="cookbooks-grid">
        <CookbookCard
          cookbook="Petite École"
          count={petiteEcoleCount}
          image="/cuisine/cookbooks/petite-ecole.png"
          description="Recettes simples et amusantes pour initier les enfants à la cuisine"
        />
        <CookbookCard
          cookbook="Camps Scout"
          count={campsScoutCount}
          image="/cuisine/cookbooks/camps-scout.png"
          description="Recettes rustiques et conviviales pour les aventures en plein air"
        />
      </div>
    </section>

    <section class="categories-section">
      <h2 class="section-title">Explorer par Catégorie</h2>
      <div class="categories-grid">
        {allCategories
          .filter(category => categoryCounts[category] > 0)
          .map((category) => (
            <CategoryCard
              category={category}
              count={categoryCounts[category]}
              cookbook="Cuisine"
              image={`/cuisine/categories/${
                category === 'plat principal' ? 'plat-principal' :
                category === 'entrée' ? 'entree' :
                category
              }.png`}
            />
          ))}
      </div>
    </section>
  </main>

  <style>
    main {
      position: relative;
      z-index: 10;
      max-width: 1200px;
      margin: 0 auto;
      padding: 6rem 2rem 4rem;
    }

    .header-section {
      text-align: center;
      margin-bottom: 4rem;
      padding-bottom: 3rem;
      border-bottom: 2px solid rgba(211, 84, 0, 0.15);
      animation: fadeInUp 0.8s ease-out;
      position: relative;
    }

    .header-section::after {
      content: "✦";
      position: absolute;
      bottom: -0.75rem;
      left: 50%;
      transform: translateX(-50%);
      font-size: 1.25rem;
      color: #d35400;
      background: #faf8f3;
      padding: 0 1rem;
    }

    @keyframes fadeInUp {
      from {
        opacity: 0;
        transform: translateY(20px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .page-title {
      font-family: "Playfair Display", serif;
      font-weight: 900;
      font-size: clamp(3rem, 8vw, 5rem);
      line-height: 1;
      letter-spacing: -0.03em;
      color: #2c2c2c;
      margin-bottom: 1.5rem;
    }

    .accent {
      color: #d35400;
      font-style: italic;
      display: inline-block;
    }

    .subtitle {
      font-size: clamp(1rem, 2.5vw, 1.35rem);
      color: #777;
      font-weight: 400;
      font-style: italic;
      letter-spacing: 0.02em;
      max-width: 600px;
      margin: 0 auto;
    }

    @media (max-width: 768px) {
      main {
        padding: 5.5rem 1.25rem 3rem;
      }

      .header-section {
        margin-bottom: 3rem;
        padding-bottom: 2.5rem;
      }

      .page-title {
        font-size: clamp(2.25rem, 10vw, 3rem);
        margin-bottom: 1.25rem;
      }

      .subtitle {
        font-size: 1rem;
      }
    }

    /* Section styles */
    section {
      margin-bottom: 4rem;
      animation: fadeInUp 0.8s ease-out;
    }

    .section-title {
      font-family: "Playfair Display", serif;
      font-size: clamp(1.75rem, 4vw, 2.5rem);
      font-weight: 700;
      color: #2c2c2c;
      margin-bottom: 2rem;
      text-align: center;
      position: relative;
      padding-bottom: 1rem;
    }

    .section-title::after {
      content: "";
      position: absolute;
      bottom: 0;
      left: 50%;
      transform: translateX(-50%);
      width: 80px;
      height: 3px;
      background: linear-gradient(90deg, transparent, #d35400, transparent);
    }

    /* Featured section */
    .featured-section {
      margin-bottom: 5rem;
    }

    /* Recent recipes section */
    .recent-section {
      margin-bottom: 5rem;
    }

    .recent-grid {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      gap: 2rem;
    }

    @media (max-width: 1024px) {
      .recent-grid {
        grid-template-columns: 1fr;
        gap: 1.75rem;
      }
    }

    @media (max-width: 768px) {
      .recent-grid {
        gap: 1.5rem;
      }

      section {
        margin-bottom: 3rem;
      }

      .featured-section,
      .recent-section {
        margin-bottom: 3.5rem;
      }

      .section-title {
        font-size: clamp(1.5rem, 5vw, 2rem);
        margin-bottom: 1.5rem;
      }
    }

    /* Cookbooks section */
    .cookbooks-section {
      margin-bottom: 5rem;
    }

    .cookbooks-grid {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      gap: 2rem;
    }

    @media (max-width: 768px) {
      .cookbooks-section {
        margin-bottom: 3.5rem;
      }

      .cookbooks-grid {
        grid-template-columns: 1fr;
        gap: 1.5rem;
      }
    }

    /* Categories section */
    .categories-section {
      margin-bottom: 3rem;
    }

    .categories-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
      gap: 2rem;
    }

    @media (max-width: 768px) {
      .categories-grid {
        grid-template-columns: 1fr;
        gap: 1.5rem;
      }
    }
  </style>
</CuisineLayout>
