---
import { getCollection } from "astro:content";
import CuisineLayout from "../../layouts/CuisineLayout.astro";
import RecipeDetailNav from "../../components/RecipeDetailNav.astro";
import RecipeStepAnimations from "../../components/RecipeStepAnimations.astro";

export async function getStaticPaths() {
  const recipes = await getCollection("cuisine");
  return recipes.map((recipe) => ({
    params: { slug: recipe.id },
    props: { recipe },
  }));
}

const { recipe } = Astro.props;
const data = recipe.data;

const cookTime = data.time.cook;
const prepTime = data.time.prep;

function formatTime(minutes: number) {
  const hours = Math.floor(minutes / 60);
  const mins = minutes % 60;
  if (hours > 0 && mins > 0) {
    return `${hours} ${hours > 1 ? "heures" : "heure"} et ${mins} minutes`;
  } else if (hours > 0) {
    return `${hours} ${hours > 1 ? "heures" : "heure"}`;
  } else {
    return `${mins} minutes`;
  }
}
---

<CuisineLayout
  title={`${data.name} | Renardo Cuisine`}
  description={data.description}
>
  <RecipeDetailNav />

  <article class="recipe-article">
    <header class="hero-section">
      {
        data.heroImage && (
          <div class="hero-image-wrapper">
            <img
              src={data.heroImage}
              alt={`Image de ${data.name}`}
              class="hero-image"
              loading="eager"
            />
          </div>
        )
      }

      <div class="hero-content">
        <div class="recipe-categories">
          {data.categories.slice(0, 3).map((cat: string) => (
            <span class="category-tag">{cat}</span>
          ))}
        </div>

        <h1 class="recipe-title">{data.name}</h1>

        <p class="recipe-description">{data.description}</p>
      </div>

      <div class="recipe-metadata">
        <div class="meta-grid">
          <div class="meta-item">
            <div class="meta-label">Difficulté</div>
            <div class="meta-value meta-highlight">{data.difficulty}</div>
          </div>

          <div class="meta-item">
            <div class="meta-label">Portions</div>
            <div class="meta-value meta-number">{data.servings} convives</div>
          </div>

          {
            prepTime > 0 && (
              <div class="meta-item">
                <div class="meta-label">Préparation</div>
                <div class="meta-value meta-number">{formatTime(prepTime)}</div>
              </div>
            )
          }

          <div class="meta-item">
            <div class="meta-label">Cuisson</div>
            <div class="meta-value meta-number">{formatTime(cookTime)}</div>
          </div>

          <div class="meta-item">
            <div class="meta-label">Méthode</div>
            <div class="meta-value meta-method">{data.cooking_method}</div>
          </div>

          {
            data.freezable && (
              <div class="meta-item">
                <div class="meta-label">Conservation</div>
                <div class="meta-value">Se congèle</div>
              </div>
            )
          }
        </div>
      </div>

      {
        data.note && (
          <div class="recipe-note">
            {data.note}
          </div>
        )
      }
    </header>

    <section class="content-flow">
      <div class="ingredients-prose">
        <h2 class="section-heading">Les provisions</h2>
        <p class="ingredient-intro">{data.ingredientIntro}</p>

        <div class="ingredients-layout">
          <div class="ingredients-grid">
            {
              data.ingredients.map((ingredient) => {
                const [main, note] = ingredient.split(" — ");
                return (
                  <div class="ingredient-line">
                    <span class="ingredient-bullet">—</span>
                    <div class="ingredient-content">
                      <span class="ingredient-main">{main}</span>
                      {note && <span class="ingredient-note">{note}</span>}
                    </div>
                  </div>
                );
              })
            }
          </div>
        </div>
      </div>

      <div class="preparation-narrative">
        <h2 class="section-heading">La méthode</h2>

        {
          data.steps.map((step, index) => (
            <div class="step-prose">
              <span class="step-number-inline">{index + 1}</span>
              <p class="step-text">{step}</p>
            </div>
          ))
        }
      </div>

      {
        data.tips && (
          <div class="tips-card">
            <h2 class="tips-heading">
              <img src="/renard.png" alt="Renard" class="tips-icon" />
              Les conseils de Renard
            </h2>
            <p class="tips-text">{data.tips}</p>
          </div>
        )
      }

      <div class="recipe-categories-prose">
        <p class="category-line">
          Une recette <em>{data.categories.join(", ")}</em> qui réchauffe le cœur.
        </p>
      </div>
    </section>
  </article>

  <footer class="minimal-footer">
    <a href="/cuisine" class="return-link">Découvrir d'autres recettes</a>
  </footer>

  <RecipeStepAnimations />

  <style>
    .recipe-article {
      max-width: 800px;
      margin: 0 auto;
      padding: var(--space-3xl) var(--space-xl) var(--space-2xl);
      position: relative;
      z-index: 10;
    }

    /* Hero Section */
    .hero-section {
      margin-bottom: 3rem;
    }

    .hero-image-wrapper {
      width: 100%;
      aspect-ratio: 16 / 9;
      overflow: hidden;
      background: #f5f5f5;
      margin-bottom: 2.5rem;
      border: 1px solid rgba(211, 84, 0, 0.12);
      box-shadow:
        0 1px 3px rgba(0, 0, 0, 0.06),
        0 4px 12px rgba(0, 0, 0, 0.04);
    }

    .hero-image {
      width: 100%;
      height: 100%;
      object-fit: cover;
      object-position: center;
      display: block;
    }

    .hero-content {
      max-width: 900px;
      margin: 0 auto 2.5rem;
      text-align: center;
    }

    .recipe-categories {
      display: flex;
      gap: 0.5rem;
      justify-content: center;
      flex-wrap: wrap;
      margin-bottom: 1.25rem;
    }

    .category-tag {
      font-size: 0.7rem;
      text-transform: uppercase;
      letter-spacing: 0.12em;
      color: #8b5a2b;
      font-weight: 600;
      padding: 4px 10px;
      background: rgba(211, 84, 0, 0.06);
      border-radius: 2px;
      border: 1px solid rgba(211, 84, 0, 0.15);
    }

    .recipe-title {
      font-family: "Playfair Display", serif;
      font-weight: 700;
      font-size: clamp(2.5rem, 6vw, 3.75rem);
      line-height: 1.15;
      letter-spacing: -0.02em;
      color: #2c2c2c;
      margin: 0 0 1rem;
    }

    .recipe-description {
      font-size: clamp(1rem, 2.5vw, 1.2rem);
      line-height: 1.7;
      color: #555;
      margin: 0;
      max-width: 700px;
      margin: 0 auto;
    }

    /* Metadata Section */
    .recipe-metadata {
      margin: 2.5rem 0;
      padding: 2rem 0;
      border-top: 1px solid rgba(211, 84, 0, 0.12);
      border-bottom: 1px solid rgba(211, 84, 0, 0.12);
    }

    .meta-grid {
      display: flex;
      flex-wrap: wrap;
      gap: 1.5rem 2rem;
      max-width: 900px;
      margin: 0 auto;
      justify-content: center;
    }

    .meta-item {
      text-align: center;
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
      min-width: 120px;
    }

    .meta-label {
      font-size: 0.7rem;
      text-transform: uppercase;
      letter-spacing: 0.12em;
      color: #999;
      font-weight: 700;
    }

    .meta-value {
      font-size: 1rem;
      color: #2c2c2c;
      font-weight: 500;
      line-height: 1.3;
    }

    .meta-highlight {
      font-style: italic;
      color: #d35400;
      font-weight: 600;
      text-transform: capitalize;
    }

    .meta-number {
      font-family: "Playfair Display", serif;
      font-weight: 700;
      font-size: 1.2rem;
      color: #8b5a2b;
    }

    .meta-method {
      font-style: italic;
      color: #555;
      font-weight: 500;
    }

    .recipe-note {
      background: rgba(211, 84, 0, 0.04);
      border-left: 3px solid #d35400;
      padding: 1rem 1.5rem;
      font-size: 0.95rem;
      color: #555;
      margin: 1.5rem auto;
      max-width: 900px;
      font-style: italic;
      text-align: center;
    }

    @keyframes fadeIn {
      from {
        opacity: 0;
      }
      to {
        opacity: 1;
      }
    }

    /* Section Headings */
    .section-heading {
      font-family: "Playfair Display", serif;
      font-size: 2rem;
      font-weight: 700;
      color: #2c2c2c;
      margin: 3rem 0 2rem;
      text-align: center;
      letter-spacing: -0.01em;
    }

    .ingredient-intro {
      font-size: 1.05rem;
      color: #777;
      margin-bottom: 2rem;
      text-align: center;
      font-style: italic;
      line-height: 1.7;
      max-width: 700px;
      margin-left: auto;
      margin-right: auto;
    }

    .ingredients-layout {
      background: #fff;
      border: 1px solid rgba(211, 84, 0, 0.12);
      padding: 2rem 1.75rem;
      box-shadow:
        0 1px 3px rgba(0, 0, 0, 0.06),
        0 4px 12px rgba(0, 0, 0, 0.04);
    }

    .ingredients-grid {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      column-gap: var(--space-2xl);
      row-gap: var(--space-md);
    }

    .ingredient-line {
      display: grid;
      grid-template-columns: auto 1fr;
      gap: 0.75rem;
      font-size: 1rem;
      color: #2c2c2c;
      padding: 0.5rem 0;
    }

    .ingredient-bullet {
      color: #d35400;
      opacity: 0.5;
      font-weight: 600;
      font-size: 1.1em;
      line-height: 1.5;
    }

    .ingredient-content {
      line-height: 1.6;
    }

    .ingredient-main {
      color: #2c2c2c;
      font-weight: 500;
    }

    .ingredient-note {
      font-size: 0.9rem;
      color: #777;
      font-style: italic;
      display: block;
      margin-top: 0.2rem;
      line-height: 1.5;
    }

    .preparation-narrative {
      margin: var(--space-3xl) 0;
    }

    /* Steps Section */
    .step-prose {
      margin-bottom: 2rem;
      display: grid;
      grid-template-columns: 3rem 1fr;
      gap: 1.5rem;
      align-items: start;
      padding: 1.5rem 0;
      border-bottom: 1px solid rgba(211, 84, 0, 0.08);
    }

    .step-number-inline {
      font-family: "Playfair Display", serif;
      font-size: 2rem;
      font-weight: 700;
      color: #d35400;
      line-height: 1;
      text-align: center;
    }

    .step-number-inline::after {
      content: ".";
    }

    .step-text {
      font-size: 1.05rem;
      line-height: 1.75;
      color: #555;
      margin: 0;
    }

    /* Tips Card - Magazine Style */
    .tips-card {
      margin: 3rem 0;
      padding: 2rem;
      background: #fff;
      border: 2px solid rgba(211, 84, 0, 0.2);
      box-shadow:
        0 1px 3px rgba(0, 0, 0, 0.06),
        0 4px 12px rgba(0, 0, 0, 0.04);
    }

    .tips-heading {
      font-family: "Playfair Display", serif;
      font-size: 1.5rem;
      font-weight: 700;
      color: #d35400;
      margin: 0 0 1.5rem;
      display: flex;
      align-items: center;
      gap: 0.75rem;
    }

    .tips-icon {
      width: 2.5rem;
      height: 2.5rem;
      display: inline-block;
      border-radius: 50%;
      border: 1px solid rgba(211, 84, 0, 0.2);
    }

    .tips-text {
      font-size: 1.05rem;
      line-height: 1.75;
      color: #555;
      margin: 0;
    }

    /* Footer Sections */
    .recipe-categories-prose {
      margin: 3rem 0 2rem;
      padding-top: 2.5rem;
      border-top: 1px solid rgba(211, 84, 0, 0.12);
      text-align: center;
    }

    .category-line {
      font-size: 1rem;
      color: #777;
      font-style: italic;
    }

    .category-line em {
      color: #d35400;
      font-weight: 600;
      font-style: normal;
    }

    .minimal-footer {
      text-align: center;
      padding: 2rem 1rem;
      margin-top: 3rem;
      border-top: 1px solid rgba(211, 84, 0, 0.08);
    }

    .return-link {
      font-size: 0.9rem;
      color: #d35400;
      text-decoration: none;
      text-transform: uppercase;
      letter-spacing: 0.1em;
      font-weight: 600;
      transition: color 0.3s ease;
    }

    .return-link:hover {
      color: #ff6b00;
    }

    /* Responsive Styles */
    @media (max-width: 768px) {
      .recipe-article {
        padding: 2rem 1.25rem;
      }

      .hero-image-wrapper {
        aspect-ratio: 4 / 3;
      }

      .recipe-title {
        font-size: clamp(2rem, 8vw, 2.75rem);
      }

      .recipe-description {
        font-size: 1rem;
      }

      .section-heading {
        font-size: 1.75rem;
        margin: 2.5rem 0 1.5rem;
      }

      .ingredients-layout {
        padding: 1.5rem 1.25rem;
      }

      .ingredients-grid {
        grid-template-columns: 1fr;
        gap: var(--space-sm);
      }

      .step-prose {
        grid-template-columns: 2.5rem 1fr;
        gap: 1rem;
        padding: 1.25rem 0;
      }

      .step-number-inline {
        font-size: 1.75rem;
      }

      .step-text {
        font-size: 1rem;
      }

      .tips-card {
        padding: 1.5rem;
      }

      .tips-heading {
        font-size: 1.35rem;
      }
    }

    @media (max-width: 480px) {
      .recipe-article {
        padding: var(--space-xl) var(--space-sm);
      }

      .hero-image-wrapper {
        height: 280px;
      }

      .hero-overlay {
        padding: var(--space-lg) var(--space-md);
      }

      .recipe-name {
        font-size: 1.75rem;
      }

      .meta-line {
        font-size: 1rem;
        line-height: 1.8;
      }

      .step-prose {
        grid-template-columns: 1fr;
        gap: 0.75rem;
        padding: 1rem 0;
      }

      .step-number-inline {
        font-size: 1.5rem;
        text-align: left;
        margin-bottom: 0.5rem;
      }

      .ingredients-layout {
        padding: 1.25rem 1rem;
      }

      .tips-card {
        padding: 1.25rem;
      }

      .tips-heading {
        font-size: 1.25rem;
      }
    }

    /* Subtle print styles */
    @media print {
      .grain {
        display: none;
      }
    }
  </style>
</CuisineLayout>
