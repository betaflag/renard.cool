---
import { getCollection } from "astro:content";
import CuisineLayout from "../../layouts/CuisineLayout.astro";
import RecipeDetailNav from "../../components/RecipeDetailNav.astro";
import RecipeStepAnimations from "../../components/RecipeStepAnimations.astro";

export async function getStaticPaths() {
  const recipes = await getCollection("cuisine");
  return recipes.map((recipe) => ({
    params: { slug: recipe.id },
    props: { recipe },
  }));
}

const { recipe } = Astro.props;
const data = recipe.data;

const cookTime = data.time.cook;
const prepTime = data.time.prep;

function formatTime(minutes: number) {
  const hours = Math.floor(minutes / 60);
  const mins = minutes % 60;
  if (hours > 0 && mins > 0) {
    return `${hours} ${hours > 1 ? "heures" : "heure"} et ${mins} minutes`;
  } else if (hours > 0) {
    return `${hours} ${hours > 1 ? "heures" : "heure"}`;
  } else {
    return `${mins} minutes`;
  }
}
---

<CuisineLayout
  title={`${data.name} | Renardo Cuisine`}
  description={data.description}
>
  <RecipeDetailNav />

  <article class="recipe-article">
    <header class="hero-section">
      {
        data.heroImage && (
          <div class="hero-image-wrapper">
            <img
              src={data.heroImage}
              alt={`Image de ${data.name}`}
              class="hero-image"
              loading="eager"
            />
            <div class="hero-overlay">
              <div class="difficulty-badge">{data.difficulty}</div>
              <h1 class="recipe-name">
                <span class="title-line">
                  {data.name
                    .split(" ")
                    .slice(0, Math.ceil(data.name.split(" ").length / 2))
                    .join(" ")}
                </span>
                <span class="title-line accent">
                  {data.name
                    .split(" ")
                    .slice(Math.ceil(data.name.split(" ").length / 2))
                    .join(" ")}
                </span>
              </h1>
            </div>
          </div>
        )
      }

      <div class="recipe-intro">
        <p class="lead-text">{data.description}</p>
      </div>

      <div class="recipe-metadata">
        <div class="meta-grid">
          <div class="meta-item">
            <div class="meta-label">Difficulté</div>
            <div class="meta-value meta-highlight">{data.difficulty}</div>
          </div>

          <div class="meta-item">
            <div class="meta-label">Portions</div>
            <div class="meta-value meta-number">{data.servings} convives</div>
          </div>

          {
            prepTime > 0 && (
              <div class="meta-item">
                <div class="meta-label">Préparation</div>
                <div class="meta-value meta-number">{formatTime(prepTime)}</div>
              </div>
            )
          }

          <div class="meta-item">
            <div class="meta-label">Cuisson</div>
            <div class="meta-value meta-number">{formatTime(cookTime)}</div>
          </div>

          <div class="meta-item">
            <div class="meta-label">Méthode</div>
            <div class="meta-value meta-method">{data.cooking_method}</div>
          </div>

          {
            data.freezable && (
              <div class="meta-item">
                <div class="meta-label">Conservation</div>
                <div class="meta-value">Se congèle</div>
              </div>
            )
          }
        </div>
      </div>

      {
        data.time.soak > 0 && (
          <div class="recipe-note">
            Les haricots doivent tremper{" "}
            <strong>{formatTime(data.time.soak)}</strong> à l'avance.
          </div>
        )
      }
    </header>

    <section class="content-flow">
      <div class="ingredients-prose">
        <h2 class="section-heading">Les provisions</h2>
        <p class="ingredient-intro">{data.ingredientIntro}</p>

        <div class="ingredients-layout">
          <div class="ingredients-grid">
            {
              data.ingredients.map((ingredient) => {
                const [main, note] = ingredient.split(" — ");
                return (
                  <div class="ingredient-line">
                    <span class="ingredient-bullet">—</span>
                    <div class="ingredient-content">
                      <span class="ingredient-main">{main}</span>
                      {note && <span class="ingredient-note">{note}</span>}
                    </div>
                  </div>
                );
              })
            }
          </div>
        </div>
      </div>

      <div class="preparation-narrative">
        <h2 class="section-heading">La méthode</h2>

        {
          data.steps.map((step, index) => (
            <div class="step-prose">
              <span class="step-number-inline">{index + 1}</span>
              <p class="step-text">{step}</p>
            </div>
          ))
        }
      </div>

      {
        data.tips && (
          <div class="tips-card">
            <h2 class="tips-heading">
              <img src="/renard.png" alt="Renard" class="tips-icon" />
              Les conseils de Renard
            </h2>
            <p class="tips-text">{data.tips}</p>
          </div>
        )
      }

      <div class="recipe-categories-prose">
        <p class="category-line">
          Une recette <em>{data.categories.join(", ")}</em> qui réchauffe le cœur.
        </p>
      </div>
    </section>
  </article>

  <footer class="minimal-footer">
    <a href="/cuisine" class="return-link">Découvrir d'autres recettes</a>
  </footer>

  <RecipeStepAnimations />

  <style>
    .recipe-article {
      max-width: 800px;
      margin: 0 auto;
      padding: var(--space-3xl) var(--space-xl) var(--space-2xl);
      position: relative;
      z-index: 10;
    }

    .hero-section {
      margin-bottom: var(--space-3xl);
    }

    .hero-image-wrapper {
      margin-bottom: var(--space-2xl);
      position: relative;
      overflow: hidden;
      border-radius: 16px;
      box-shadow: 0 12px 48px rgba(0, 0, 0, 0.15);
      animation: fadeIn 0.8s ease-out;
      width: 100%;
      height: 450px;
    }

    .hero-image {
      width: 100%;
      height: 100%;
      object-fit: cover;
      object-position: center;
      border-radius: 16px;
      transition: transform 0.5s ease;
      filter: sepia(5%) saturate(115%) contrast(110%) brightness(95%);
    }

    .hero-image-wrapper:hover .hero-image {
      transform: scale(1.03);
    }

    .hero-overlay {
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      padding: var(--space-2xl) var(--space-xl);
      background: linear-gradient(
        to top,
        rgba(0, 0, 0, 0.85) 0%,
        rgba(0, 0, 0, 0.5) 50%,
        transparent 100%
      );
      z-index: 2;
    }

    .difficulty-badge {
      display: inline-block;
      padding: 0.4rem 1rem;
      background: rgba(211, 84, 0, 0.9);
      color: #fff;
      font-size: 0.85rem;
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 0.1em;
      border-radius: 20px;
      margin-bottom: var(--space-sm);
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
    }

    .recipe-name {
      font-family: "Playfair Display", serif;
      font-weight: 900;
      font-size: clamp(2.5rem, 8vw, 4rem);
      line-height: 1.1;
      letter-spacing: -0.02em;
      color: #fff;
      text-shadow:
        3px 3px 6px rgba(0, 0, 0, 0.6),
        0 0 40px rgba(0, 0, 0, 0.4);
      margin: 0;
    }

    .title-line {
      display: block;
    }

    .title-line.accent {
      color: #ff8c3a;
      font-style: italic;
      margin-top: 0.15em;
      font-weight: 700;
      text-shadow:
        3px 3px 6px rgba(0, 0, 0, 0.6),
        0 0 30px rgba(255, 107, 0, 0.5);
    }

    .recipe-intro {
      margin: var(--space-2xl) 0 var(--space-xl);
      text-align: center;
      animation: fadeIn 1s ease-out 0.2s both;
    }

    .lead-text {
      font-size: clamp(1.15rem, 3vw, 1.35rem);
      line-height: 1.75;
      color: var(--text);
      font-weight: 400;
      font-style: italic;
      letter-spacing: -0.01em;
      margin: 0;
    }

    .recipe-metadata {
      margin: var(--space-2xl) 0;
      padding: var(--space-xl) 0;
      border-top: 1px solid rgba(211, 84, 0, 0.15);
      border-bottom: 1px solid rgba(211, 84, 0, 0.15);
    }

    .meta-grid {
      display: flex;
      flex-wrap: wrap;
      gap: var(--space-lg) var(--space-xl);
      max-width: 900px;
      margin: 0 auto;
      justify-content: center;
    }

    .meta-item {
      text-align: center;
      display: flex;
      flex-direction: column;
      gap: 0.4rem;
      min-width: 140px;
    }

    .meta-label {
      font-size: 0.85rem;
      text-transform: uppercase;
      letter-spacing: 0.1em;
      color: var(--text-light);
      font-weight: 600;
      opacity: 0.7;
    }

    .meta-value {
      font-size: 1.15rem;
      color: var(--text);
      font-weight: 500;
      line-height: 1.3;
    }

    .meta-highlight {
      font-style: italic;
      color: var(--accent);
      font-weight: 600;
      text-transform: capitalize;
    }

    .meta-number {
      font-family: "Playfair Display", serif;
      font-weight: 700;
      font-size: 1.35rem;
      color: var(--warm-brown);
    }

    .meta-method {
      font-style: italic;
      color: var(--text);
      font-weight: 500;
    }

    .freezable-tag {
      color: #4a90e2;
      font-style: italic;
      font-weight: 500;
    }

    .recipe-note {
      background: rgba(255, 165, 0, 0.08);
      border-left: 4px solid var(--accent);
      padding: var(--space-md) var(--space-lg);
      border-radius: 8px;
      font-size: 1rem;
      color: var(--text);
      margin: var(--space-lg) 0;
      font-style: italic;
      text-align: center;
    }

    @keyframes fadeIn {
      from {
        opacity: 0;
      }
      to {
        opacity: 1;
      }
    }

    .section-heading {
      font-family: "Playfair Display", serif;
      font-size: 2.25rem;
      font-weight: 900;
      color: var(--text);
      margin: var(--space-3xl) 0 var(--space-xl);
      position: relative;
      text-align: center;
      letter-spacing: -0.02em;
    }

    .section-heading::before {
      content: "✦";
      display: block;
      font-size: 1.5rem;
      color: var(--accent);
      opacity: 0.5;
      margin-bottom: var(--space-sm);
    }

    .section-heading::after {
      content: "";
      display: block;
      width: 100px;
      height: 2px;
      background: linear-gradient(
        90deg,
        transparent,
        var(--accent),
        transparent
      );
      margin: var(--space-sm) auto 0;
    }

    .ingredient-intro {
      font-size: 1.1rem;
      color: var(--text-light);
      margin-bottom: var(--space-2xl);
      text-align: center;
      font-style: italic;
      line-height: 1.7;
      max-width: 650px;
      margin-left: auto;
      margin-right: auto;
    }

    .ingredients-layout {
      background: linear-gradient(135deg, #faf7f4 0%, #f8f4ef 100%);
      border: 1px solid rgba(211, 84, 0, 0.1);
      border-radius: 16px;
      padding: var(--space-xl);
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.03);
    }

    .ingredients-grid {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      column-gap: var(--space-2xl);
      row-gap: var(--space-md);
    }

    .ingredient-line {
      display: grid;
      grid-template-columns: auto 1fr;
      gap: var(--space-sm);
      font-size: 1.05rem;
      color: var(--text);
      transition: all 0.2s ease;
      padding: var(--space-sm);
      border-radius: 8px;
    }

    .ingredient-line:hover {
      background: rgba(255, 255, 255, 0.6);
      transform: translateX(2px);
    }

    .ingredient-bullet {
      color: var(--accent);
      opacity: 0.6;
      font-weight: 600;
      transition: opacity 0.2s ease;
      font-size: 1.2em;
      line-height: 1.4;
    }

    .ingredient-line:hover .ingredient-bullet {
      opacity: 1;
    }

    .ingredient-content {
      line-height: 1.4;
    }

    .ingredient-main {
      color: var(--text);
      font-weight: 500;
      transition: color 0.2s ease;
    }

    .ingredient-line:hover .ingredient-main {
      color: var(--warm-brown);
    }

    .ingredient-note {
      font-size: 0.9rem;
      color: var(--text-light);
      font-style: italic;
      display: block;
      margin-top: 0.25rem;
      opacity: 0.85;
      line-height: 1.4;
    }

    .preparation-narrative {
      margin: var(--space-3xl) 0;
    }

    .step-prose {
      margin-bottom: var(--space-2xl);
      display: grid;
      grid-template-columns: 5rem 1fr;
      gap: var(--space-lg);
      align-items: start;
      padding: var(--space-lg);
      background: linear-gradient(
        135deg,
        rgba(255, 255, 255, 0.4) 0%,
        rgba(250, 247, 244, 0.3) 100%
      );
      border-left: 4px solid rgba(211, 84, 0, 0.2);
      border-radius: 12px;
      animation: slideIn 0.6s ease-out both;
      animation-delay: calc(var(--step-index, 0) * 0.1s);
      transition: all 0.3s ease;
    }

    .step-prose:hover {
      border-left-color: var(--accent);
      background: linear-gradient(
        135deg,
        rgba(255, 255, 255, 0.6) 0%,
        rgba(250, 247, 244, 0.5) 100%
      );
      transform: translateX(4px);
    }

    @keyframes slideIn {
      from {
        opacity: 0;
        transform: translateX(-20px);
      }
      to {
        opacity: 1;
        transform: translateX(0);
      }
    }

    .step-number-inline {
      font-family: "Playfair Display", serif;
      font-size: 4rem;
      font-weight: 900;
      color: var(--accent);
      opacity: 0.15;
      line-height: 0.9;
      text-align: center;
      transition: all 0.3s ease;
      position: relative;
    }

    .step-number-inline::after {
      content: ".";
      position: absolute;
      bottom: -0.1em;
      right: -0.15em;
    }

    .step-prose:hover .step-number-inline {
      opacity: 0.3;
      transform: scale(1.05);
    }

    .step-text {
      font-size: 1.15rem;
      line-height: 1.85;
      color: var(--text);
      padding-top: 0.5rem;
    }

    .step-text::first-letter {
      font-size: 1.8em;
      font-weight: 700;
      color: var(--accent);
      float: left;
      line-height: 0.85;
      margin-right: 0.08em;
      font-family: "Playfair Display", serif;
    }

    .tips-card {
      margin: var(--space-3xl) 0;
      padding: var(--space-2xl);
      background: linear-gradient(
        135deg,
        rgba(92, 64, 51, 0.95) 0%,
        rgba(139, 90, 43, 0.9) 50%,
        rgba(101, 67, 33, 0.95) 100%
      );
      border: 3px solid #d4a574;
      border-radius: 16px;
      box-shadow:
        0 8px 32px rgba(0, 0, 0, 0.3),
        0 0 40px rgba(211, 84, 0, 0.15),
        inset 0 1px 0 rgba(255, 255, 255, 0.1),
        inset 0 -1px 0 rgba(0, 0, 0, 0.2);
      animation: tipsFadeIn 0.8s ease-out;
      position: relative;
      overflow: hidden;
    }

    .tips-card::before {
      content: "";
      position: absolute;
      inset: 0;
      background: repeating-linear-gradient(
        0deg,
        transparent,
        transparent 2px,
        rgba(0, 0, 0, 0.03) 2px,
        rgba(0, 0, 0, 0.03) 4px
      );
      pointer-events: none;
      border-radius: 16px;
    }

    .tips-card::after {
      content: "❝";
      position: absolute;
      top: 10px;
      right: 20px;
      font-size: 6rem;
      color: rgba(212, 165, 116, 0.15);
      font-family: Georgia, serif;
      line-height: 1;
      pointer-events: none;
    }

    @keyframes tipsFadeIn {
      from {
        opacity: 0;
        transform: translateY(10px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .tips-heading {
      font-family: "Playfair Display", serif;
      font-size: 1.75rem;
      font-weight: 700;
      color: #f4e8d8;
      margin: 0 0 var(--space-lg);
      display: flex;
      align-items: center;
      gap: var(--space-md);
      text-shadow:
        2px 2px 4px rgba(0, 0, 0, 0.5),
        0 0 20px rgba(212, 165, 116, 0.3);
      position: relative;
      z-index: 1;
    }

    .tips-icon {
      width: 3rem;
      height: 3rem;
      display: inline-block;
      border-radius: 50%;
      background: radial-gradient(
        circle at center,
        rgba(255, 165, 0, 0.2),
        transparent 70%
      );
      padding: 0.1rem;
      box-shadow:
        0 0 20px rgba(255, 140, 0, 0.4),
        0 0 40px rgba(255, 107, 0, 0.2);
      filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.3));
    }

    .tips-text {
      font-family: "Crimson Pro", serif;
      font-size: 1.1rem;
      line-height: 1.9;
      color: #f5ede1;
      margin: 0;
      font-style: italic;
      text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
      position: relative;
      z-index: 1;
    }

    .tips-text::first-letter {
      font-size: 2.2em;
      font-weight: 700;
      color: #d4a574;
      float: left;
      line-height: 0.8;
      margin-right: 0.15em;
      margin-top: 0.1em;
      text-shadow:
        2px 2px 4px rgba(0, 0, 0, 0.6),
        0 0 10px rgba(212, 165, 116, 0.5);
    }

    .recipe-categories-prose {
      margin: var(--space-3xl) 0 var(--space-lg);
      padding-top: var(--space-xl);
      border-top: 2px dotted rgba(211, 84, 0, 0.15);
      text-align: center;
    }

    .category-line {
      font-size: 1.05rem;
      color: var(--text-light);
      font-style: italic;
      letter-spacing: 0.02em;
    }

    .category-line em {
      color: var(--accent);
      font-weight: 500;
      font-style: normal;
    }

    .minimal-footer {
      text-align: center;
      padding: var(--space-2xl) var(--space-lg);
      margin-top: var(--space-3xl);
    }

    .return-link {
      font-family: "Crimson Pro", serif;
      font-size: 1.15rem;
      color: var(--accent);
      text-decoration: none;
      position: relative;
      transition: color 0.3s ease;
      letter-spacing: 0.02em;
    }

    .return-link::after {
      content: "";
      position: absolute;
      bottom: -5px;
      left: 50%;
      transform: translateX(-50%);
      width: 0;
      height: 2px;
      background: var(--accent);
      transition: width 0.3s ease;
    }

    .return-link:hover {
      color: var(--accent-light);
    }

    .return-link:hover::after {
      width: 100%;
    }

    @media (max-width: 768px) {
      .recipe-article {
        padding: var(--space-2xl) var(--space-md);
      }

      .hero-image-wrapper {
        height: 350px;
        border-radius: 12px;
      }

      .hero-overlay {
        padding: var(--space-xl) var(--space-md);
      }

      .recipe-name {
        font-size: clamp(2rem, 7vw, 2.5rem);
      }

      .difficulty-badge {
        font-size: 0.75rem;
        padding: 0.3rem 0.8rem;
      }

      .lead-text {
        font-size: 1.1rem;
      }

      .meta-line {
        font-size: 1.05rem;
      }

      .section-heading {
        font-size: 1.75rem;
        margin: var(--space-2xl) 0 var(--space-lg);
      }

      .ingredients-layout {
        padding: var(--space-lg);
      }

      .ingredients-grid {
        grid-template-columns: 1fr;
        gap: var(--space-sm);
      }

      .step-prose {
        grid-template-columns: 3.5rem 1fr;
        gap: var(--space-md);
        padding: var(--space-lg);
        margin-bottom: var(--space-lg);
      }

      .step-number-inline {
        font-size: 3rem;
      }

      .step-text {
        font-size: 1.05rem;
      }

      .tips-card {
        padding: var(--space-lg);
      }

      .tips-heading {
        font-size: 1.35rem;
      }
    }

    @media (max-width: 480px) {
      .recipe-article {
        padding: var(--space-xl) var(--space-sm);
      }

      .hero-image-wrapper {
        height: 280px;
      }

      .hero-overlay {
        padding: var(--space-lg) var(--space-md);
      }

      .recipe-name {
        font-size: 1.75rem;
      }

      .meta-line {
        font-size: 1rem;
        line-height: 1.8;
      }

      .step-prose {
        grid-template-columns: 1fr;
        gap: var(--space-sm);
      }

      .step-number-inline {
        font-size: 2.5rem;
        text-align: left;
        margin-bottom: var(--space-xs);
      }

      .ingredients-layout {
        padding: var(--space-md);
      }
    }

    /* Subtle print styles */
    @media print {
      .grain {
        display: none;
      }
    }
  </style>
</CuisineLayout>
